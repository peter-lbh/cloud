<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.atguigu.springcloud</groupId>
    <artifactId>microservicecloud</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>../microservicecloud-api</module>
        <module>../microservicecloud-provider-dept-8081</module>
        <module>../microservicecloud-customer-dept-80</module>
        <module>../microservicecloud-eureka-7001</module>
        <module>../microservicecloud-eureka-7002</module>
        <module>../microservicecloud-eureka-7003</module>
        <module>../microservicecloud-provider-dept-8082</module>
        <module>../microservicecloud-provider-dept-8083</module>
        <module>../microservicecloud-customer-dept-80-feign</module>
        <module>../microservicecloud-provider-dept-8081-hystrix</module>
        <module>../microservicecloud-customer-hystrix-dashboard-9001</module>
        <module>../microservicecloud-zuul-gateway-9527</module>
        <module>../microservicecloud-config-3344</module>
    </modules>
    <packaging>pom</packaging>
       <properties>
               <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
               <maven.compiler.source>1.8</maven.compiler.source>
               <maven.compiler.target>1.8</maven.compiler.target>
               <!--<spring-boot.version>2.1.6.RELEASE</spring-boot.version>-->
       </properties>
    <dependencies>
        <!--配置在外面，所有boot度开启热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!--热部署插件-->
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.9.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.3</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.16</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.16</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.8</version>
            </dependency>
            <!--上面那种写法要cloud和boot版本对上子工程才能合理继承版本！！！！！-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-web</artifactId>-->
                <!--<version>${spring-boot.version}</version>-->
            <!--</dependency>-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-test</artifactId>-->
                <!--<version>${spring-boot.version}</version>-->
            <!--</dependency>-->
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-websocket</artifactId>-->
                <!--<version>${spring-boot.version}</version>-->
            <!--</dependency>-->

        </dependencies>
    </dependencyManagement>

    <build>
        <!--配置点击微服务链接后显示的信息-->
        <finalName>microservicecloud</finalName>
         <resources>
             <resource>
                 <directory>src/main/resources</directory>
                 <filtering>true</filtering>
             </resource>
         </resources>
        <plugins>
            <!--对应上面resources的配置插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!--以$开头，$结尾 中间为动态读取的值，类似el表达式但是没有{}-->
                    <delimiters>
                        <delimit>$</delimit>
                    </delimiters>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <verbose>true</verbose>
                    <!-- 代表mybatis生成的内容不要覆盖已有的内容-->
                    <overwrite>false</overwrite>
                </configuration>
                <!--这里表示该插件要用到数据库，所以也要配置个驱动
                         和在外面<dependencies>配置不一样，外面配置的表示项目要用到！！-->
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.16</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

</project>